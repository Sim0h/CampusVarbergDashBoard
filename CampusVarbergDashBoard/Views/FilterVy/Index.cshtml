@model CampusVarbergDashBoard.ViewModels.FilterViewModel

@{
	var utbildning = new string[] { "Alla YH Utbildningar", "Digital analytiker", "Elkonstruktör", "Energitekniker med specialisering vindkraft",
	"IT-projektledare", "Järnvägsprojektör", "Laborant", "Logistiker", "Medicinsk vårdadministratör", "Processtekniker - hållbar produktion",
	"Projektledare inriktning vindkraft", "Redovisningskonsult", "Rådgivare bank och placering", "Solenergiprojektör", "Systemutvecklare .NET",
	"Vatten- och biogastekniker", "VVS-ingenjör - energi och teknik" };

	var kön = new string[] { "Alla Kön", "Kvinna", "Man" };

	var år = new string[] { "Alla år", "2024", "2023", "2022", "2021", "2020" };

	var termin = new string[] { "Alla terminer", "Vårtermin", "Hösttermin" };
}

<form method="get">
	<div class="dropdown-container">
		<div class="dropdown-item">
			<ejs-dropdownlist id="utbildning" name="utbildning" dataSource="utbildning" popupWidth="220px" placeholder="Välj utbildning" popupHeight="220px" value="@Model.SelectedUtbildning"></ejs-dropdownlist>
		</div>

		<div class="dropdown-item">
			<ejs-dropdownlist id="kön" name="kön" dataSource="kön" popupWidth="220px" placeholder="Välj Kön" popupHeight="220px" value="@Model.SelectedKön"></ejs-dropdownlist>
		</div>

		<div class="dropdown-item">
			<ejs-dropdownlist id="år" name="år" dataSource="år" popupWidth="220px" placeholder="Välj År" popupHeight="220px" value="@Model.SelectedÅr"></ejs-dropdownlist>
		</div>

		<div class="dropdown-item">
			<ejs-dropdownlist id="termin" name="termin" dataSource="termin" popupWidth="220px" placeholder="Välj Termin" popupHeight="220px" value="@Model.SelectedTermin"></ejs-dropdownlist>
		</div>

		<div class="button-container">
			<button type="submit" class="btn btn-primary">Sök</button>
		</div>
	</div>
</form>

<div class="container">
	<div class="row mb-4">
		<!-- First 3 cards -->
		<div class="col-md-4 mb-4">
			<div class="card">
				<div class="card-body">
					<div class="title">
						<h5>Antal Sökande</h5>
					</div>
					@if (Model != null)
					{
						@await Html.PartialAsync("_NumberOfApplicantsFilterData", Model)
					}
					else
					{
						<p>No data available</p>
					}
				</div>
			</div>
		</div>
		<div class="col-md-4 mb-4">
			<div class="card">
				<div class="card-body">
					<div class="title">
						<h5>Könsfördelning</h5>
					</div>
					@if (Model != null)
					{
						@await Html.PartialAsync("_GenderFilterData", Model)
					}
					else
					{
						<p>No data available</p>
					}
				</div>
			</div>
		</div>
		<div class="col-md-4 mb-4">
			<div class="card">
				<div class="card-body">
					<div class="title">
						<h5>Status Ansökta</h5>
					</div>
					@if (Model != null)
					{
						@await Html.PartialAsync("_AcceptanceFilterData", Model)
					}
					else
					{
						<p>No data available</p>
					}
				</div>
			</div>
		</div>
		<div class="col-md-4 mb-4">
			<div class="card">
				<div class="card-body">
					<div class="title">
						<h5>Behörighet</h5>
					</div>
					@if (Model != null)
					{
						@await Html.PartialAsync("_CompetenceFilterData", Model)
					}
					else
					{
						<p>No data available</p>
					}
				</div>
			</div>
		</div>
		<div class="col-md-4 mb-4">
			<div class="card">
				<div class="card-body">
					<div class="title">
						<h5>Sen Anmälan</h5>
					</div>
					@if (Model != null)
					{
						@await Html.PartialAsync("_LateApplicationFilterData", Model)
					}
					else
					{
						<p>No data available</p>
					}
				</div>
			</div>
		</div>
		<div class="col-md-4 mb-4">
			<div class="card">
				<div class="card-body">
					<div class="title">
						<h5>Erbjudna Plats</h5>
					</div>
					@if (Model != null)
					{
						@await Html.PartialAsync("_AcceptedOfferFilterData", Model)
					}
					else
					{
							<p>No data available</p>
					}
				</div>
			</div>
		</div> 
	</div>

	<!-- Fourth card below the first three -->
	<div class="row">
		<div class="col-md-12">
			<div class="card">
				<div class="card-body">
					<div class="title">
						<h5>Åldersfördelning</h5>
					</div>
					@if (Model != null)
					{
						@await Html.PartialAsync("_AgeFilterData", Model)
					}
					else
					{
						<p>No data available</p>
					}
				</div>
			</div>
		</div>
	</div>
</div>

<style>
	/* Behåll layouten för dropdowns */
	.dropdown-container {
		display: flex;
		gap: 20px;
		justify-content: center;
		padding-top: 15px;
		padding-bottom: 15px;
		background-color: #f873b6;
		border-radius: 4px;
	}

	.dropdown-item {
		flex: 1;
		max-width: 300px;
	}

		.dropdown-item:hover {
			background-color: transparent;
			border-color: transparent;
			box-shadow: none;
		}

		.dropdown-item .e-control-wrapper {
			border-radius: 4px;
		}

	.e-ddl.e-input-group.e-control-wrapper .e-input {
		font-size: 15px;
		font-family: inherit;
		color: black;
		background: #32a5ab;
	}

	.btn {
		color: #ffffff;
		background-color: #337ab7;
		border-color: #2e6da4;
	}

	.button-container {
		display: inline-block;
		margin-bottom: 0;
		font-weight: normal;
		text-align: center;
		vertical-align: middle;
		touch-action: manipulation;
		cursor: pointer;
		background-image: none;
		border: 1px solid transparent;
		white-space: nowrap;
		padding: 6px 12px;
		font-size: 14px;
		line-height: 1.42857143;
		border-radius: 4px;
		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		user-select: none;
		
	}

	.applicant-list {
		margin-top: 20px;
	}

	.card {
		margin-bottom: 10px;
		border: 2px solid #ccc; /* Add a border */
		border-radius: 8px; /* Add rounded corners */
		box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); /* Add a subtle shadow */
		display: flex;
		justify-content: center;
		align-items: center;
		text-align: center;
		height: 100%; /* Make sure the card height expands properly */
	}

	.card-body {
		padding: 20px;
		display: flex;
		justify-content: center; /* Center horizontally */
		align-items: center; /* Center vertically */
		flex-direction: column; /* Ensure content is stacked vertically */
		text-align: center; /* Align text in the center */
	}

	.pie-chart-container {
		margin-top: 20px;
		text-align: center;
	}

	.widget-chart {
		background-color: #f9f9f9;
		padding: 20px;
		border-radius: 8px;
		box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
		min-height: 200px; /* Ensure cards have a uniform height */
		display: flex;
		justify-content: center; /* Center horizontally */
		align-items: center; /* Center vertically */
		text-align: center; /* Center text inside */
	}

	.card-content p {
		margin: 0;
		font-size: 18px; /* Adjust text size */
		color: var(--text-color);
	}

	/* Container spacing */
	.container {
		margin-top: 20px;
	}

	.card-body p {
		text-align: center;
		width: 100%;
	}

	/* Style for empty data message */
	p {
		
		font-size: 16px;
	}
</style>
